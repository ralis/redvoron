## Voron Design VORON2 250/300/350mm Spider TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths							          [mcu] section
## Thermistor types						      [extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location	      [safe_z_home] section
## Homing end position				      [gcode_macro G32] section
## Z Endstop Switch  offset for Z0	[stepper_z] section
## Probe points							        [quad_gantry_level] section
## Min & Max gantry corner postions	[quad_gantry_level] section
## PID tune								          [extruder] and [heater_bed] sections
## Fine tune E steps					      [extruder] sectoon

[mcu]
##	Obtain definition by "ls -l /dev/serial/by-id/" 
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_110028000F50563046363120-if00 

## Uncomment below if you're using the Raspberry uart0 to communicate with Spider
#restart_method: command

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 3000			        #Max 4000
max_z_velocity: 15			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#      X/Y Stepper Settings
#####################################################################

[stepper_x]
##	Connected to X-MOT (B Motor)
step_pin: PE11
dir_pin: !PE10
enable_pin: !PE9
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:400  #set to 400 for 0.9 degree stepper
endstop_pin: ^PA1
position_min: 0
position_endstop: 300
position_max: 300
homing_speed: 100   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PE7
interpolate: True
run_current: 0.8
hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0

[stepper_y]
##	Connected to Y-MOT (A Motor)
step_pin: PD8
dir_pin: !PB12
enable_pin: !PD9
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:400  #set to 400 for 0.9 degree stepper
endstop_pin: ^PA2
position_min: 0
position_endstop: 300
position_max: 300
homing_speed: 100  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PE15
interpolate: True
run_current: 0.8
hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Z Stepper Settings
#####################################################################

## In Z-MOT Position
## Z0 Stepper - Front Left
[stepper_z]
step_pin: PD14
dir_pin: !PD13
enable_pin: !PD15
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16
##  In Z- Position
endstop_pin: ^PA0
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
position_max: 290
position_min: -5
homing_speed: 16
second_homing_speed: 3
homing_retract_dist: 3
# # Klicky Probe
# # Enrique: Needed to use with Z Endstop sensor but fails with no values so guessed first to load
# # new cfg first to then home again to get exact.
# Still fails with other errors :(
# # Ref: https://github.com/VoronDesign/VoronUsers/tree/master/printer_mods/JosAr/Klicky-Probe
# variable_z_endstop_x: 0
# variable_z_endstop_y: 0

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PD10
interpolate: True
run_current: 1.2
hold_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0

##	In E1-MOT Position
##	Z1 Stepper - Rear Left
[stepper_z1]
step_pin: PE6
dir_pin: PC13
enable_pin: !PE5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC14
interpolate: True
run_current: 1.2
hold_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0

##	In E2-MOT Position
##	Z2 Stepper - Rear Right
[stepper_z2]
step_pin: PE2
dir_pin: !PE4
enable_pin: !PE3
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PC15
interpolate: true
run_current: 1.2
hold_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0

##	In E3-MOT Position
##	Z3 Stepper - Front Right
[stepper_z3]
step_pin: PD12
dir_pin: PC4
enable_pin: !PE8
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

[tmc2209 stepper_z3]
uart_pin: PA15
interpolate: true
run_current: 1.2
hold_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Extruder
#####################################################################
##	In E0-MOT Position
[extruder]
step_pin: PD5
dir_pin: !PD6
enable_pin: !PD4

########
# For Klipper LGX users from Bondtech website
# rotation_distance = full_steps_per_rotation * microsteps / steps_per_mm
# 
# > rotation_distance = 200 * 16 / 400rotation_distance = 8
# 
# > The above calculation assumes the following parameters:
#  - stepper motor is a 1.8 degrees motor hence 200 as full steps per rotation;
#  - microsteps are set to 16;
#  - e-steps value recommended for the LGX is 400.
# Enrique: Don't have gear ratio but other params should work here.
##	Update Gear Ratio depending on your Extruder Type
##	Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##	Use 80:20 for M4, M3.1
##  Use 7.5:1 for Galileo
# DO NOT use gear ratio since stated here:  https://github.com/geoffrey-young/3D-Printing/blob/main/klipper/voron/2.4/toolhead.cfg
# gear_ratio: 50:17				#BMG Gear Ratio
# Enrique: From here, https://www.bondtech.se/product/lgx-large-gears-extruder/
# Set 16 microsteps and 400 full ste jlkjlkj    ps for LGX
# ung
# AND stated by Geoffrey Yo
rotation_distance: 7.44 # Enrique: calculated in Voron 2.4 using Klipper doc: https://www.klipper3d.org/Rotation_Distance.html#calibrating-rotation_distance-on-extruders
microsteps: 16
full_steps_per_rotation: 200	#200 for 1.8 degree for LGX Custom motor
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: PB15
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC0
min_temp: 10
max_temp: 300
max_power: 1.0
min_extrude_temp: 170
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
pressure_advance: 0.04
##	Default is 0.040, leave stock
#pressure_advance_smooth_time: 0.040

##	In E0-MOT Position
##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: PD7
interpolate: false
run_current: 0.5
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0

[verify_heater extruder]
max_error: 240
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
#check_gain_time:
#   This controls heater verification during initial heating. Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for extruders
#   and 60 seconds for heater_bed.
#hysteresis: 5
#   The maximum temperature difference (in Celsius) to a target
#   temperature that is considered in range of the target. This
#   controls the max_error range check. It is rare to customize this
#   value. The default is 5.
#heating_gain: 2
#   The minimum temperature (in Celsius) that the heater must increase
#   by during the check_gain_time check. It is rare to customize this
#   value. The default is 2.

#####################################################################
#   Bed Heater
#####################################################################
[heater_bed]
##	SSR Pin - In BED OUT position
heater_pin: PB4
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PC3
##	Adjust Max Power so your heater doesn't warp your bed
max_power: 0.6
min_temp: 0
max_temp: 120
pwm_cycle_time: 0.01666
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
#	Probe
#####################################################################

[probe]
##	This probe is not used for Z height, only Quad Gantry Leveling
##	In Z+ position
##	If your probe is NO instead of NC, change pin to ^!PA3
pin: ^PA3
x_offset: 0
y_offset: 19.75
z_offset: 6.42
speed: 10.0
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 3

#####################################################################
#	Fan Control
#####################################################################

[heater_fan hotend_fan]
##	Hotend Fan - FAN0 Connector
pin: PB0
max_power: 1.0
#kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##	If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[fan]
##	Print Cooling Fan - FAN1 Connector
pin: PB1
#max_power: 1.0
#kick_start_time: 0.5
##	Depending on your fan, you may need to increase this value
##	if your fan will not start. Can change cycle_time (increase)
##	if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan controller_fan]
##	Controller fan - FAN2 Connector
pin: PB2
#kick_start_time: 0.5
heater: heater_bed
heater_temp: 45.0
# Eruiz 3/31/22" Increased fan speed to 1.0 (100%) to reduce layer shift during fast moves or bumps
fan_speed: 1.0

[fan_generic exhaust_fan]
#  Exhaust fan - In E2 OUT Positon
# Renamed fucntion to be manual instead of auto and disabled other lines
# below
pin: PB3
max_power: 1.0
# shutdown_speed: 0.0
# #kick_start_time: 0.5
# heater: heater_bed
# # Original Default from Spider cfg
# heater_temp: 60
# fan_speed: 1.0

#####################################################################
#	LED Control
#####################################################################
[output_pin caselight ]
#  Chamber Lighting - In E1 OUT Position
pin: PC8
pwm: true
shutdown_value: 0
cycle_time: 0.01

#####################################################################
#	Homing and Gantry Adjustment Routines
#####################################################################
[idle_timeout]
timeout: 1800

## Enrique: Commented out since using Klicky complains with this section and [homing_override]
# [safe_z_home]
# #	XY Location of the Z Endstop Switch
# #	Update -10,-10 to the XY coordinates of your endstop pin 
# #	(such as 157,305) after going through Z Endstop Pin
# #	Location Definition step.
# home_xy_position: 205,270
# speed:100
# z_hop:10
   
[quad_gantry_level]
#	Use QUAD_GANTRY_LEVEL to level a gantry.
#	Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
#	MAX (250, 250), (300,300), or (350,350) depending on your printer size
#	to respective belt positions
	
#	Gantry Corners for 300mm Build
gantry_corners:
	-60,-10
	360,370
#	Probe points
points:
	50,25
	50,225
	250,225
	250,25


#--------------------------------------------------------------------
speed: 100
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

#####################################################################
#	Displays
#####################################################################

#--------------------------------------------------------------------

[display]
#	mini12864 LCD Display
lcd_type: uc1701
cs_pin: PC11
a0_pin: PD2
rst_pin: PC10
encoder_pins: ^PC6,^PC7
click_pin: ^!PA8
contrast: 63
#spi_bus: spi1
spi_software_mosi_pin: PA7
spi_software_miso_pin: PA6
spi_software_sclk_pin: PA5

[neopixel fysetc_mini12864]
#	To control Neopixel RGB in mini12864 display
pin: PC12
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

#	Set RGB values on boot up for each Neopixel. 
#	Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        SET_LED LED=fysetc_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 
        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 Index=1 
	      SET_PIN PIN=caselight VALUE=1

#--------------------------------------------------------------------

[filament_switch_sensor filament_sensor]
pause_on_runout: True
runout_gcode:
    PARK_MACRO
    M117 Out of Filament
insert_gcode:
    M117 Resuming
    RESUME_MACRO
event_delay: 3.0
pause_delay: 0.5
switch_pin: ^PB13 


# #####################################################################
# #    Z Calibration
# #####################################################################
# #####################################################################
# #    User Variables
# # ENRIQUE: I needed to add this or errors out when executing CALIBRATE_Z.
# #####################################################################
# # [gcode_macro _USER_VARIABLE]
# # description: Helper: Contains User defined printer variables
# # ##### Homing and general movement #####
# # variable_z_endstop_x: 207             ; z Endstop x position inside right profile
# # variable_z_endstop_y: 287.5             ; z Endstop y position
# # variable_z_hop: 7.5                   ; z hop for moves e.g homing
# # variable_xy_home_current: 0.4         ; reduced homing current for x and y
# # variable_z_home_current: 0.3          ; reduced homing current for z
# # variable_home_accel: 1200             ; reduced ACCEL for homing
# # ##### Mag Probe #####
# # variable_probe_dock_x: 252.5          ; x toolhead position before docking probe
# # variable_probe_dock_y: 285            ; y toolhead position before docking probe
# # variable_probe_dock_z: 1              ; z toolhead position before docking probe (only for bed dock)
# # variable_probe_undock_x: 252.5        ; x toolhead position after docking probe
# # variable_probe_undock_y: 300          ; y toolhead position after docking probe
# # variable_probe_undock_z: 10           ; z toolhead position after docking probe (only for bed dock)
# # variable_probe_z_min: 7.5             ; z minimum height to avoid crash
# # variable_probe_travel_speed: 200      ; dock moves travel speed
# # variable_probe_dock_speed: 100        ; dock speed for attach/dock
# # ##### Respond defaults #####
# # variable_respond_set_current: 0       ; default of RESPOND if not set in the call
# # variable_respond_set_acc: 0           ; default of RESPOND if not set in the call
# # variable_respond_probe_action: 1      ; default of RESPOND if not set in the call
# # ##### Park Position #####
# # variable_park_bed: [150,150,30]       ; different park position
# # gcode:
# [z_calibration]
# #   The X and Y coordinates (in mm) for clicking the nozzle on the
# #   Z endstop.
# probe_nozzle_x: 207
# probe_nozzle_y: 287.5
# #   The X and Y coordinates (in mm) for clicking the body of the probe's
# #   switch on the Z endstop.
# probe_switch_x: 201
# probe_switch_y: 269
# #   The X and Y coordinates (in mm) for probing on the print surface
# #   (e.g. the center point) These coordinates will be adapted by the
# #   probe's X and Y offsets. The default is the relative_reference_index
# #   of the configured bed_mesh. It will raise an error if there is no
# #   probe_bed site and no bed_mesh with a relative_reference_index
# #   configured.
# probe_bed_x: 150
# probe_bed_y: 150
# #   The trigger point offset of the used mag-probe switch.
# #   This needs to be fined out manually. More on this later
# #   in this section..
# # eruiz: 0.42 is what the author starts with, but if I want nozzle further way, lower the value.
# switch_offset: 0.42
# #   The maximum allowed deviation of the calculated offset.
# #   If the offset exceeds this value, it will stop!
# #   The default is 1.0 mm.
# max_deviation: 1.5
# #   The number of times to probe each point. The probed z-values
# #   will be averaged. The default is from the probe's configuration.
# #samples: default from "probe:samples" section
# #   The maximum Z distance (in mm) that a sample may differ from other
# #   samples. The default is from the probe's configuration.
# #samples_tolerance: default from "probe:samples_tolerance" section
# #   The number of times to retry if a sample is found that exceeds
# #   samples_tolerance. The default is from the probe's configuration.
# #samples_tolerance_retries: default from "probe:samples_tolerance_retries" section
# #   The calculation method when sampling more than once - either
# #   "median" or "average". The default is from the probe's configuration.
# #samples_result: default from "probe:samples_result" section
# #   The distance in mm to move up before moving to the next
# #   position. The default is two times the z_offset from the probe's
# #   configuration.
# clearance: 7.5
# #position_min: default from "stepper_z:position_min" section.
# #   The moving speed in X and Y. The default is 50 mm/s.
# speed: 200
# #   Speed (in mm/s) of the Z axis when lifting the probe between
# #   samples and clearance moves. The default is from the probe's
# #   configuration.
# #lift_speed: default from "probe:lift_speed" section
# #   The fast probing speed (in mm/s) used, when probing_first_fast
# #   is activated. The default is from the Z rail configuration.
# #probing_speed: default from "stepper_z:homing_speed" section.
# #   The slower speed (in mm/s) for probing the recorded samples.
# #   The default is second_homing_speed of the Z rail configuration.
# #probing_second_speed: default from "stepper_z:second_homing_speed" section.
# #   Distance to back off (in mm) before probing the next sample.
# #   The default is homing_retract_dist from the Z rail configuration.
# #probing_retract_dist: default from "stepper_z:homing_retract_dist" section.
# #   If true, the first probing is done faster by the probing speed.
# #   This is to get faster down and the result is not recorded as a
# #   probing sample. The default is false.
# probing_first_fast: true
# #   If true, the first probing is done faster by the probing speed.
# #   This is to get faster down and the result is not recorded as a
# #   probing sample. The default is false.
# start_gcode: DETACH_PROBE
# #   A list of G-Code commands to execute prior to each calibration command.
# #   See docs/Command_Templates.md for G-Code format. This can be used to
# #   attach the probe.
# before_switch_gcode: ATTACH_PROBE
# #   A list of G-Code commands to execute prior to each probing on the
# #   mag-probe. See docs/Command_Templates.md for G-Code format. This can be
# #   used to attach the probe after probing on the nozzle and before probing
# #   on the mag-probe.
# end_gcode: DETACH_PROBE
# #   A list of G-Code commands to execute after each calibration command.
# #   See docs/Command_Templates.md for G-Code format. This can be used to
# #   detach the probe afterwards.

# #####################################################################
# ## With these settings, the probe is attached after probing the nozzle
# ## and before probing the switch !!
# #####################################################################
# ## Otherwise, starting with the probe attached would be like this:
# start_gcode: ATTACH_PROBE
# #before_switch_gcode: ATTACH_PROBE
# end_gcode: DETACH_PROBE
# #####################################################################

# #####################################################################
# #    Macros
# #####################################################################

# ###################################################################
# #        !!! Caution !!!
# #
# # This Macro is only needed if not using the start/end_gcode
# # properties to attach/detach the probe
# ###################################################################
# [gcode_macro CALIBRATE_Z]
# description: Automatically calibrates the nozzles offset to the print surface and dock/undock MagProbe 
# rename_existing: CALIBRATE_Z_BASE
# gcode:
#   ##### get user defines  #####
#   {% set z_hop = printer['gcode_macro _USER_VARIABLE'].probe_z_min|float %}
#   ##### get toolhead parameters #####
#   {% set act_z = printer.gcode_move.gcode_position.z|float %}
#   #### end of definitions #####
#   ## reduce current of motors
#   _SET_ACC VAL=HOME
#   _SET_CURRENT VAL=HOME
#   _CG28 RESET_SETTINGS=false
#   {% if act_z < z_hop %}
#     G90 ; absolute positioning
#     {action_respond_info("CALIBRATE_Z: High must be above %.2f" % z_hop)}
#     G1 Z{z_hop} F900 ; move head up
#   {% endif %}
#   ATTACH_PROBE
#   CALIBRATE_Z_BASE
#   DETACH_PROBE 
#   {% if params.RESET_SETTINGS|default('true') == 'true' %}
#     ## return to org current settings
#     _SET_CURRENT
#     _SET_ACC
#   {% endif %}
  
# [gcode_macro DETACH_PROBE]
# description: Dock the MagProbe if not already docked
# gcode:
#   _MAG_PROBE ACTION=DOCK
#   _MAG_PROBE ACTION=CHECK_DOCK

# # Already defined error when loading config for Z Calibration
# # [gcode_macro ATTACH_PROBE]
# # description: Attaching the MagProbe if not already attached
# # gcode:
# #   _MAG_PROBE ACTION=ATTACH
# #   _MAG_PROBE ACTION=CHECK_ATTACH

# [gcode_macro GET_PROBE_STATUS]
# description: Prints the current MagProbe state, valid probe states are UNKNOWN, ATTACHED and DOCKED
# gcode:
#   _MAG_PROBE ACTION=GET_STATUS RESPOND=1

# [gcode_macro SET_PROBE_STATUS]
# description: Manually specify MagProbe status, valid probe states are UNKNOWN, ATTACHED and DOCKED
# variable_state: 'unknown'
# gcode:
#   {% if 'STATE' in params|upper and 
#         (params.STATE|lower == 'unknown' or params.STATE|lower == 'attached' or params.STATE|lower == 'docked') %}
#     SET_GCODE_VARIABLE MACRO=SET_PROBE_STATUS VARIABLE=state VALUE='"{params.STATE|lower}"'
#     SET_GCODE_VARIABLE MACRO=_MAG_PROBE VARIABLE=state VALUE='"{params.STATE|lower}"'
#   {% else %}
#     {% set state = params.STATE|default('none') %}
#     {action_raise_error("Invalid probe state: %s. Valid probe states are [UNKNOWN, ATTACHED, DOCKED]" % state|upper)}
#   {% endif %}

# [gcode_macro _SET_CURRENT]
# description: Helper: Set Z-drive motor current
# variable_last_val: 'CONFIG'
# gcode:
#   ###### set default values #####
#   {% set default_respond = printer['gcode_macro _USER_VARIABLE'].respond_set_current|int %}
#   {% set val = params.VAL|default('CONFIG') %}
#   {% set respond = params.Z_RESPOND|default(default_respond)|int %}
#   {% if val == 'HOME' %}
#     {% set xy_run  = printer['gcode_macro _USER_VARIABLE'].xy_home_current %}
#     {% set xy_hold = printer['gcode_macro _USER_VARIABLE'].xy_home_current %}
#     {% set z_run  = printer['gcode_macro _USER_VARIABLE'].z_home_current %}
#     {% set z_hold = printer['gcode_macro _USER_VARIABLE'].z_home_current %}
#   {% else %}
#     {% if 'tmc2209 stepper_z' in printer.configfile.settings %}
#       {% set xy_run  = printer.configfile.settings['tmc2209 stepper_x'].run_current %}
#       {% set xy_hold = printer.configfile.settings['tmc2209 stepper_x'].hold_current %}
#       {% set z_run  = printer.configfile.settings['tmc2209 stepper_z'].run_current %}
#       {% set z_hold = printer.configfile.settings['tmc2209 stepper_z'].hold_current %}
#     {% elif 'tmc5160 stepper_z' in printer.configfile.settings %}
#       {% set xy_run  = printer.configfile.settings['tmc5160 stepper_x'].run_current %}
#       {% set xy_hold = printer.configfile.settings['tmc5160 stepper_x'].hold_current %}
#       {% set z_run  = printer.configfile.settings['tmc5160 stepper_z'].run_current %}
#       {% set z_hold = printer.configfile.settings['tmc5160 stepper_z'].hold_current %}
#     {% endif %}
#   {% endif %}
#   ##### end of definition #####
#   {% if val != last_val %}
#     SET_GCODE_VARIABLE MACRO=_SET_CURRENT VARIABLE=last_val VALUE='"{val}"'
#     {% if respond == 1 %}
#       {action_respond_info("Home&Probe: RunCur %.2fA rms HoldCur %.2fA rms" % (z_run|float, z_hold|float))}
#     {% endif %}
#     SET_TMC_CURRENT STEPPER=stepper_x  CURRENT={xy_run} HOLDCURRENT={xy_hold}
#     SET_TMC_CURRENT STEPPER=stepper_y  CURRENT={xy_run} HOLDCURRENT={xy_hold}
#     SET_TMC_CURRENT STEPPER=stepper_z  CURRENT={z_run} HOLDCURRENT={z_hold}
#     SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={z_run} HOLDCURRENT={z_hold}
#     SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT={z_run} HOLDCURRENT={z_hold}
#     SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT={z_run} HOLDCURRENT={z_hold}
#     M400
#   {% endif %}

# [gcode_macro _SET_ACC]
# description: Helper: Set accel and accel_to_decel value
# variable_last_val: 'CONFIG'
# gcode:
#   ##### set default value #####
#   {% set default_respond = printer['gcode_macro _USER_VARIABLE'].respond_set_acc|int %}
#   {% set val = params.VAL|default('CONFIG') %}
#   {% set respond = params.RESPOND|default(default_respond)|int %}
#   {% if val == 'HOME' %}
#     {% set accel = printer['gcode_macro _USER_VARIABLE'].home_accel %}
#     {% set accel_to_decel = printer['gcode_macro _USER_VARIABLE'].home_accel|int / 2 %}
#   {% else %}
#     {% set accel = printer.configfile.settings.printer.max_accel %}
#     {% set accel_to_decel = printer.configfile.settings.printer.max_accel_to_decel %}
#   {% endif %}
#   ##### end of definition #####
#   {% if val != last_val %}
#     SET_GCODE_VARIABLE MACRO=_SET_ACC VARIABLE=last_val VALUE='"{val}"'
#     {% if respond == 1 %}
#       {action_respond_info("VELOCITY_LIMIT set ACCEL: %d ACCEL_TO_DECEL: %d" % (accel|int, accel_to_decel|int))}
#     {% endif %}
#     SET_VELOCITY_LIMIT ACCEL={accel} ACCEL_TO_DECEL={accel_to_decel} RESPOND=0
#   {% endif %}

# # QUERY_PROBE must run direct before _PROBE_ACTION
# # that relation is insured by the caller id
# [gcode_macro _MAG_PROBE]
# description: Helper: Query MagProbe state and request action
# variable_state: 'unknown'
# variable_id: 0
# gcode:
#   ##### add RESPOND if specified #####
#   {% if 'RESPOND' in params|upper %}
#     {% set respond = "RESPOND=" + params.RESPOND %}
#   {% else %}
#     {% set respond = "" %}
#   {% endif %}
#   ##### generate an id not equal to 0 #####
#   {% if id == 0 %}
#     {% set id = 1 %}
#   {% else %}
#     {% set id = id + 1 %}
#   {% endif %}
#   ##### end of definition #####
#   QUERY_PROBE ID={id}
#   _PROBE_ACTION ACTION={params.ACTION} ID={id} {respond}
#   SET_GCODE_VARIABLE MACRO=_MAG_PROBE VARIABLE=id VALUE={id}
#   M400

# ## conditional home
# [gcode_macro _CG28]
# gcode:
#   {% if "xyz" not in printer.toolhead.homed_axes %}
#     G28 RESET_SETTINGS={ params.RESET_SETTINGS|default('true') }
#   {% endif %}


# [gcode_macro _PROBE_ACTION]
# description: Helper: Perform MagProbe action
# gcode:
#   ##### get params and defaults #####
#   {% set default_respond = printer['gcode_macro _USER_VARIABLE'].respond_probe_action|default(1)|int %}
#   {% set respond = params.RESPOND|default(default_respond)|int %}
#   {% set action = params.ACTION|lower %}
#   {% set id = params.ID|default(0)|int %} ; call id 0 means invalid
#   ##### get probe variables #####
#   {% set probe_id = printer['gcode_macro QUERY_PROBE'].id|default(0)|int %}
#   {% set man_state = printer['gcode_macro SET_PROBE_STATUS'].state|lower %}
#   ##### generate state #####
#   {% if man_state != 'unknown' %}
#     SET_GCODE_VARIABLE MACRO=SET_PROBE_STATUS VARIABLE=state VALUE='"unknown"'
#     {% set state = man_state %}
#     {% if respond == 1 %}
#       {action_respond_info("MagProbe: State was set to %s by SET_PROBE_STATUS"% man_state|upper)}
#     {% endif %}
#   {% elif id == 0 or id != probe_id %}
#     {action_raise_error("MagProbe: Call ID invalid or does not match QUERY_PROBE call ID")}
#   {% elif printer.probe.last_query|lower == 'false' %}
#     {action_raise_error("MagProbe: Please execute QUERY_PROBE first")}
#   {% else %}
#     {% if printer.probe.last_query|int == 0 %}
#       {% set state = 'attached' %}
#     {% else %}
#       {% set state = 'docked' %}
#     {% endif %}
#   {% endif %}
#   ##### end of defines #####
#   SET_GCODE_VARIABLE MACRO=_MAG_PROBE VARIABLE=state VALUE='"{state}"'
#   {% if action == 'attach' %}
#     {% if state == 'docked' %}
#       {% if respond == 1 %}
#         {action_respond_info("MagProbe: Attach Probe")}
#       {% endif %}
#       _ATTACH_PROBE
#     {% else %}
#       {% if respond == 1 %}
#         {action_respond_info("MagProbe: already attached")}
#       {% endif %}
#     {% endif %}
#   {% elif action == 'dock' %}
#     {% if state == 'attached' %}
#       {% if respond == 1 %}
#         {action_respond_info("MagProbe: Dock Probe")}
#       {% endif %}
#       _DOCK_PROBE
#     {% else %}
#       {% if respond == 1 %}
#         {action_respond_info("MagProbe: already docked")}
#       {% endif %}
#     {% endif %}
#   {% elif action == 'check_dock' %}
#     {% if state != 'docked' %}
#       {action_raise_error("MagProbe: dock failed!")}
#     {% endif %}
#   {% elif action == 'check_attach' %}
#     {% if state != 'attached' %}
#       {action_raise_error("MagProbe: attach failed!")}
#     {% endif %}
#   {% elif action == 'get_status' %}
#     {% if respond == 1 %}
#       {action_respond_info("MagProbe Status: %s" % state)}
#     {% endif %}
#   {% else %}
#     {action_raise_error("MagProbe: action not defined")}
#   {% endif %}


# [gcode_macro QUERY_PROBE]
# description: Return the status of the z-probe and store ID
# rename_existing: QUERY_PROBE_BASE
# variable_id: 0
# gcode:
#   {% set id = params.ID|default(0) %} ; call id 0 means invalid
#   QUERY_PROBE_BASE
#   SET_GCODE_VARIABLE MACRO=QUERY_PROBE VARIABLE=id VALUE={id}

# [gcode_macro _DOCK_PROBE]
# description: Helper: Dock MagProbe
# gcode:
#   ##### Get user defines #####
#   {% set dock_x = printer['gcode_macro _USER_VARIABLE'].probe_dock_x %}
#   {% set dock_y = printer['gcode_macro _USER_VARIABLE'].probe_dock_y %}
#   {% set dock_z = printer['gcode_macro _USER_VARIABLE'].probe_dock_z %}
#   {% set undock_x = printer['gcode_macro _USER_VARIABLE'].probe_undock_x %}
#   {% set undock_y = printer['gcode_macro _USER_VARIABLE'].probe_undock_y %}
#   {% set undock_z = printer['gcode_macro _USER_VARIABLE'].probe_undock_z %}
#   {% set z_min = printer['gcode_macro _USER_VARIABLE'].probe_z_min|float %}
#   {% set t_speed = printer['gcode_macro _USER_VARIABLE'].probe_travel_speed|float * 60 %}
#   {% set d_speed = printer['gcode_macro _USER_VARIABLE'].probe_dock_speed|float * 60 %}
#   ##### get toolhead position #####
#   {% set act_z = printer.toolhead.position.z|float %}
#   ##### end of definitions #####
#   SAVE_GCODE_STATE NAME=STATE_DOCK_PROBE
#   SET_GCODE_OFFSET Z=0.0                ; reset offset - will be restored
#   G90                                   ; absolute positioning
#   {% if act_z < z_min %}
#     G0 Z{z_min} F900                    ; move head up
#   {% endif %}

#   ###################################################################
#   #        !!! Caution !!!
#   #
#   # Adapt for your needs if needed !!
#   ###################################################################

#   ##### Example for a bed dock:
#   #G0 X{dock_x} Y{dock_y} F{t_speed}     ; move to mag-probe
#   #G0 Z{dock_z} F1500 FORCE              ; move down to probe
#   #G0 Y{undock_y} F{d_speed}             ; move into the holder
#   #G0 Z{undock_z} F1500                  ; move upwards to remove probe

#   ##### Example for a gantry dock:
#   G0 X{dock_x} Y{dock_y} F{t_speed}     ; move in front of mag-probe
#   G0 Y{undock_y} F{d_speed}             ; move into the holder
#   G0 X{undock_x} F{d_speed}             ; move sideways to remove probe  
  
#   RESTORE_GCODE_STATE NAME=STATE_DOCK_PROBE

#####################################################################
#	Macros
#####################################################################
# To get back to loading cfg ok since can't find fix to Z_TILT_ADJUST error
[include Klicky-Probe.cfg]
[include nozzle_scrub.cfg]

[gcode_macro G32]
gcode:
    SET_PIN PIN=caselight VALUE=1
    # BED_MESH_CLEAR
    G28 ; home all axes
    # QUAD_GANTRY_LEVEL
    # G28
    # # 300 build
    # G0 X150 Y150 Z30 F3600
   
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    SET_PIN PIN=caselight VALUE=1
    # Disable Exhaust since badly cools when printing ABS and Nylon
    SET_FAN_SPEED FAN=exhaust_fan SPEED=0
    # Home only XY since leftover plastic in cold state not reliable Z offset yet until later in procedure below.
    G32
    G0  X150 Y150 F3600
    # PLA 210 and 60
    # ABS 240 and 90 for better Z offset use
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=260
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=75
    M109 S260
    M190 S75
    # After extruder at 250, scrub nozzle to home again
    CLEAN_NOZZLE
    G32
    Attach_Probe_Lock
    QUAD_GANTRY_LEVEL
    Dock_Probe_Unlock
    G0  X250 Y250 F3600            ; during warm up, park nozzle at rear 
    G1 Z20 F3000                   ; move nozzle away from bed 
    M117 Printing...

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # Exhaust out all ABS/Nylon fumes
    SET_FAN_SPEED FAN=exhaust_fan SPEED=1
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    # ERUIZ - Removed clean nozzle since can do at start of print.
    # G1 E-10.0 F3600                ; retract filament
    # G91                            ; relative positioning
    # G0 Z5.00 X50.0 Y50.0 F20000    ; move nozzle to remove stringing
    # G90                            ; absolute positioning for moving away from part or CLEAN_NOZZLE hits 
    # G0  X275 Y295 F3600             ; park nozzle at rear before using scrubber
    # CLEAN_NOZZLE
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G91                            ; Force to Relative for moving up based on 3d printed model
    G1 Z10 F3000                    ; move nozzle up 5mm
    # G90                            ; absolute positioning  REMOVED since still bumping b/c somehow goes to Z=~5mm 
    # G0  X295 Y295 F3600            ; park far so no bumpting of parts!
    G90                             ; Set to Absolute since can stop printing from starting
    M84                             ; Disable motors so can move gantry out of the way based on the print
    M117 Exh fan 2min
    SET_FAN_SPEED FAN=exhaust_fan SPEED=1
    G4 P120000
    SET_FAN_SPEED FAN=exhaust_fan SPEED=0 ; Exh fan off
    M117 Done

[gcode_macro MID_BED]
#   Move middle of bed
gcode:
    G32                   ; move nozzle up 5mm
    G90                            ; absolute positioning
    G0  X150 Y150 F3600             ; park nozzle at rear
    SET_PIN PIN=caselight VALUE=1

[gcode_macro SAFER_DOCK_PROBE]
#   Moves head to avoid hitting scrubber which will have probe still attached but off center 
# which causes a crash!!!! SO first  moving to 0,150 first, then dock 
gcode:
    G32                   ; move nozzle up 5mm
    G90                            ; absolute positioning
    G0  X0 Y150 F3600             ; park nozzle at rear
    DOCK_PROBE 
    
#############################################################
# Filament Sensor - Change filament
#############################################################
# Filament change
[gcode_macro M600]
gcode:
    PAUSE_MACRO
    UNLOAD

[gcode_macro PAUSE_MACRO]
gcode:
    ; SAVE_GCODE_STATE NAME=PAUSE_state
    PAUSE
    RESPOND TYPE=command MSG=action:paused
    PARK_MACRO
    SET_IDLE_TIMEOUT TIMEOUT=3600

[gcode_macro RESUME_MACRO]
gcode:
    SET_IDLE_TIMEOUT TIMEOUT=600
    ; RESTORE_GCODE_STATE NAME=PAUSE_state
    RESUME
    RESPOND TYPE=command MSG=action:resumed

[gcode_macro PARK_MACRO]
gcode:
    {% set X = params.X|default(20) %}
    {% set Y = params.X|default(280) %}
    {% set Z = params.X|default(100) %}
    SAVE_GCODE_STATE NAME=PARK_MACRO_state
    G91                     ; relative positioning
    G1 E-2 F1000            ; retract filament
    G1 Z10                  ; lift z slightly             
    G90                     ; absolute positioning
    G1 X{X} Y{Y} Z{Z} F3000 ; park the head
    RESTORE_GCODE_STATE name=PARK_MACRO_state

[gcode_macro UNLOAD]
gcode:
    SAVE_GCODE_STATE NAME=UNLOAD_state
    G91                 ; relative positioning
    G1 E5.0 F1200       ; extrude a little
    G1 E3.0 F1600       ; extrude a little more
    G1 E-13.14 F7000    ; retract
    G1 E-540 F3000      ; retract a lot more
    RESTORE_GCODE_STATE name=UNLOAD_state

[gcode_macro PURGE]
gcode:
    SAVE_GCODE_STATE NAME=PURGE_state
    G91                 ; relative positioning
    G1 E45.0 F2500      ; purge
    RESTORE_GCODE_STATE name=PURGE_state

[gcode_macro LOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=LOAD_FILAMENT
    G91                 ; relative positioning
    G1 E25.0 F1000      ; extrude
    G1 E435 F2500       ; extrude a lot more
    G4 P900             ; dwell
    G1 E45.0 F2500      ; extrude a littel more
    RESTORE_GCODE_STATE name=LOAD_FILAMENT

# Convert Marlin linear advance (M900) commands to Klipper (SET_PRESSURE_ADVANCE) commands.
# For use with Marlin's linear advance calibration: https://marlinfw.org/tools/lin_advance/k-factor.html
[gcode_macro M900]
gcode:
	# Parameters
	{% set pa = params.K|float %}
	SET_PRESSURE_ADVANCE ADVANCE={pa}

## 	Common Temperature Sensors
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"
##   "PT1000"
[include fluidd.cfg]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 35.916
#*# pid_ki = 0.985
#*# pid_kd = 327.287
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 36.547
#*# pid_ki = 1.477
#*# pid_kd = 226.133
#*#
#*# [stepper_z]
#*# position_endstop = -0.400
