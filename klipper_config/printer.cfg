## Voron Design VORON2 250/300/350mm Spider TMC2209 UART config
[mcu]
##	Obtain definition by "ls -l /dev/serial/by-id/" 
##--------------------------------------------------------------------
# OLDER Fysetc Spider 1.1 board
# serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_110028000F50563046363120-if00 
# Newer: BTT Octopus v1.1 board
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_470039000551303532383235-if00


[printer]
kinematics: corexy
max_velocity: 250  
max_accel: 10000			        
max_z_velocity: 15			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

# [include adxl.cfg]

[input_shaper]
shaper_freq_x: 38
shaper_freq_y: 33
shaper_type: mzv

[gcode_macro _CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}

[pause_resume]
#####################################################################
#      X/Y Stepper Settings
#####################################################################

[stepper_x]
# B Motor - Left motor if standing in front of V2
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:400  #set to 400 for 0.9 degree stepper
endstop_pin: PG6
position_min: 0
position_endstop: 300
position_max: 300
homing_speed: 100   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false 
run_current: 0.8
hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0

[stepper_y]
# A Motor - Right side if standing in front of V2
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:400  #set to 400 for 0.9 degree stepper
endstop_pin: PG9
position_min: 0
position_endstop: 300
position_max: 300
homing_speed: 100  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
run_current: 0.8
hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Z Stepper Settings
#####################################################################
## Z0 Stepper - Front Left
[stepper_z]
step_pin: PF11 
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16
endstop_pin: probe:z_virtual_endstop
position_max: 290
position_min: -5
homing_speed: 16
second_homing_speed: 3
homing_retract_dist: 3

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6 
interpolate: false 
run_current: 1.2
hold_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z1 Stepper - Rear Left
[stepper_z1]
step_pin: PG4
dir_pin: !PC1 
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

[tmc2209 stepper_z1]
uart_pin: PC7 
interpolate: false
run_current: 1.2
hold_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z2 Stepper - Rear Right
[stepper_z2]
step_pin: PF9 
dir_pin: PF10
enable_pin: !PG2 
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false 
run_current: 1.2
hold_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z3 Stepper - Front Right
[stepper_z3]
step_pin: PC13 
dir_pin: !PF0 
enable_pin: !PF1 
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false 
run_current: 1.2
hold_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0

[controller_fan spider_drivers]
##	Cool off steppers since got error 2x while doing initial testing and motors were idle but on.
pin: PD14 
fan_speed: 0.5
idle_timeout: 120 # 10 min to see if drivers not overheating.
stepper: stepper_x, stepper_y, stepper_z, stepper_z1, stepper_z2, stepper_z3
heater:

#####################################################################
#   Bed Heater
#####################################################################
[heater_bed]
heater_pin: PA3
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PF3 
##	Adjust Max Power so your heater doesn't warp your bed
max_power: 0.70
min_temp: 0
max_temp: 120
pwm_cycle_time: 0.01666
control: pid
pid_kp: 35.893
pid_ki: 1.103
pid_kd: 292.079

[verify_heater heater_bed]
max_error: 300
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
check_gain_time: 90
#   This controls heater verification during initial heating. Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for extruders
#   and 60 seconds for heater_bed.
#hysteresis: 5
#   The maximum temperature difference (in Celsius) to a target
#   temperature that is considered in range of the target. This
#   controls the max_error range check. It is rare to customize this
#   value. The default is 5.
#heating_gain: 2
#   The minimum temperature (in Celsius) that the heater must increase
#   by during the check_gain_time check. It is rare to customize this
#   value. The default is 2.
#####################################################################
#	Probe
#####################################################################

[probe]
# Tap
##	This probe is not used for Z height, only Quad Gantry Leveling
##	In Z+ position
##	If your probe is NO instead of NC, change pin to ^!PA3
pin: EBBCan:PB9
x_offset: 0
y_offset: 0
#z_offset: 0
speed: 7
lift_speed: 14
samples: 3
samples_result: median
# Increased tolerance from 0.006 to 0.008 to 0.01
sample_retract_dist: 3.0
samples_tolerance: 0.010
samples_tolerance_retries: 6
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}


[heater_fan controller_fan]
pin: PD12 
kick_start_time: 0.5
heater: heater_bed
heater_temp: 75.0
fan_speed: 1.0


#####################################################################
#	Homing and Gantry Adjustment Routines
#####################################################################
[idle_timeout]
timeout: 1800

## Enrique: Commented out since using Klicky complains with this section and [homing_override]
[safe_z_home]
home_xy_position: 150,280
speed:100
z_hop:10
   
[quad_gantry_level]
#	Use QUAD_GANTRY_LEVEL to level a gantry.
#	Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
#	MAX (250, 250), (300,300), or (350,350) depending on your printer size
#	to respective belt positions
	
#	Gantry Corners for 300mm Build
gantry_corners:
	-60,-10
	360,370
#	Probe points
points:
	50,25
	50,225
	250,225
	250,25


#--------------------------------------------------------------------
speed: 100
horizontal_move_z: 10
retries: 7
retry_tolerance: 0.0075
max_adjust: 10

#####################################################################
#	Displays
#####################################################################

#--------------------------------------------------------------------
########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

##  mini12864 LCD Display
[display]
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

#  To control Neopixel RGB in mini12864 display
[neopixel btt_mini12864]
pin: EXP1_6
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

#  Set RGB values on boot up for each Neopixel. 
#  Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
       SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
       SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
       SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 


[respond]
default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
#default_prefix: echo:
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".

#####################################################################
#	Macros
#####################################################################
# [include nozzle_scrub.cfg]
[include bedfans.cfg]
[include stealthburner.cfg]
# [include fanmonitor.cfg]
[include macros.cfg]
[include dry_box.cfg]
[include KAMP_Settings.cfg]

# [include hex-btns.cfg]

[bed_mesh]
speed: 120
horizontal_move_z: 5
mesh_min: 35, 6
mesh_max: 250, 250
probe_count: 5, 3

[exclude_object]

[gcode_macro G32]
gcode:
    # For Tap max to get readings before a print from Kapman's suggestion
    M117 Tap Heatup...
    M140 S70     ; set bed + ext at same time to get to temps more quickly
    M109 S150
    G28 

   
[gcode_macro PRINT_START]
gcode:
    # printstart
    STATUS_PRINTING
    G28
    G32
    M117 Bed Temp
    G4 P120000
    M117 Quad Gantry Leveling
    QUAD_GANTRY_LEVEL
    BED_MESH_CALIBRATE
    SMART_PARK
    G90 ; Force absolute so can move bed at start
    {% set bedtemp = params.BED|int %}
    {% set hotendtemp = params.HOTEND|int %}
    M140 S{bedtemp}     ; set bed + ext at same time to get to temps more quickly
    M104 S{hotendtemp}
    M190 S{bedtemp}     ; Wait to get to temps                                                
    M109 S{hotendtemp}      
    M220 S100 ; At 300%, some filament missing at various layers.  Went down to 100%.
    LINE_PURGE
    M117 AdjZ  .750
    SET_GCODE_OFFSET Z=.750
    M220 S50
    M117 Speed to 50perc


[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    G1 E-10.0 F3600              ; Retract to easily change filaments, KAMP purge line helps with 1st layer
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 5, th.axis_maximum.z]|min %}

    # Exhaust out all ABS/Nylon fumes
    SET_FAN_SPEED FAN=BedFans SPEED=1
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G91                            ; Force to Relative for moving up based on 3d printed model
    G1 Z10 F3000                    ; move nozzle up 5mm
    G90                             ; Set to Absolute since can stop printing from starting
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear

    M84                             ; Disable motors so can move gantry out of the way based on the print
    STATUS_READY
    M117 Ready

[gcode_macro MID_BED]
#   Move middle of bed
gcode:
    G32                   ; move nozzle up 5mm
    G90                            ; absolute positioning
    G0  X150 Y150 F3600             ; park nozzle at rear

[gcode_macro SAFER_DOCK_PROBE]
#   Moves head to avoid hitting scrubber which will have probe still attached but off center 
# which causes a crash!!!! SO first  moving to 0,150 first, then dock 
gcode:
    G32                   ; move nozzle up 5mm
    G90                            ; absolute positioning
    G0  X0 Y150 F3600             ; park nozzle at rear

[gcode_macro STBURNER_FIXES]
gcode:
    _CG28 ; home all axes
    G90
    G0 X150 Y0 Z150 F3600


#############################################################
# Filament Sensor - Change filament
#############################################################
# Filament change
[gcode_macro M600]
gcode:
    PAUSE_MACRO
    UNLOAD

[gcode_macro PAUSE_MACRO]
gcode:
    ; SAVE_GCODE_STATE NAME=PAUSE_state
    PAUSE
    RESPOND TYPE=command MSG=action:paused
    PARKREAR
    SET_IDLE_TIMEOUT TIMEOUT=3600

[gcode_macro RESUME_MACRO]
gcode:
    SET_IDLE_TIMEOUT TIMEOUT=600
    ; RESTORE_GCODE_STATE NAME=PAUSE_state
    RESUME
    RESPOND TYPE=command MSG=action:resumed

[gcode_macro PARK_MACRO]
gcode:
    {% set X = params.X|default(20) %}
    {% set Y = params.X|default(280) %}
    {% set Z = params.X|default(100) %}
    SAVE_GCODE_STATE NAME=PARK_MACRO_state
    G91                     ; relative positioning
    G1 E-2 F1000            ; retract filament
    G1 Z10                  ; lift z slightly             
    G90                     ; absolute positioning
    G1 X{X} Y{Y} Z{Z} F3000 ; park the head
    RESTORE_GCODE_STATE name=PARK_MACRO_state

[gcode_macro PARKREAR]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                           ; home if not already homed
    {% endif %}
    SAVE_GCODE_STATE NAME=PARKREAR
    G90                              ; absolute positioning
    G0 X{printer.toolhead.axis_minimum.x+10} Y{printer.toolhead.axis_maximum.y-10} Z{printer.toolhead.axis_maximum.z-50} F6000     
    RESTORE_GCODE_STATE NAME=PARKREAR

[gcode_macro UNLOAD]
gcode:
    SAVE_GCODE_STATE NAME=UNLOAD_state
    G91                 ; relative positioning
    G1 E5.0 F1200       ; extrude a little
    G1 E3.0 F1600       ; extrude a little more
    G1 E-13.14 F7000    ; retract
    G1 E-40 F3000      ; retract a lot more
    RESTORE_GCODE_STATE name=UNLOAD_state

[gcode_macro PURGE]
gcode:
    SAVE_GCODE_STATE NAME=PURGE_state
    G91                 ; relative positioning
    G1 E45.0 F2500      ; purge
    RESTORE_GCODE_STATE name=PURGE_state

[gcode_macro LOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=LOAD_FILAMENT
    G91                 ; relative positioning
    G1 E25.0 F1000      ; extrude
    G1 E435 F2500       ; extrude a lot more
    G4 P900             ; dwell
    G1 E45.0 F2500      ; extrude a littel more
    RESTORE_GCODE_STATE name=LOAD_FILAMENT

# Eruiz - Unable to get proper message when inserting or removing the filament from the sensor manually when probing sensor with:
# "QUERY_FILAMENT_SENSOR sensor=RUNOUT"
# [filament_switch_sensor RUNOUT]
# pause_on_runout: True 
# runout_gcode:
# insert_gcode:
# event_delay: 3.0
# pause_delay: 0.5
# switch_pin: PB13 

# Convert Marlin linear advance (M900) commands to Klipper (SET_PRESSURE_ADVANCE) commands.
# For use with Marlin's linear advance calibration: https://marlinfw.org/tools/lin_advance/k-factor.html
[gcode_macro M900]
gcode:
	# Parameters
	{% set pa = params.K|float %}
	SET_PRESSURE_ADVANCE ADVANCE={pa}


[include fluidd.cfg]
[include ebb36.cfg]
#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 32.115
#*# pid_ki = 2.353
#*# pid_kd = 109.592
#*#
#*# [probe]
#*# z_offset = 0.160
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.068228, -0.070728, -0.073228
#*# 	-0.060728, -0.045728, -0.063228
#*# 	-0.063228, -0.065728, -0.063228
#*# tension = 0.2
#*# min_x = 133.59
#*# algo = lagrange
#*# y_count = 3
#*# mesh_y_pps = 2
#*# min_y = 133.92
#*# x_count = 3
#*# max_y = 165.3
#*# mesh_x_pps = 2
#*# max_x = 166.35
